version: "3.3"
services:
  db:
    restart: always
    container_name: db-${PROJECT_NAME}
    image: postgres:15.2
    environment:
      POSTGRES_DB: "${DB_DATABASE}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./database/initdb:/docker-entrypoint-initdb.d
      - ./database/pgdata:/var/lib/postgresql/data      
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 20s
      timeout: 10s
      retries: 5
  redis:
    container_name: redis-${PROJECT_NAME}
    image: redis:7.0-alpine
    ports: 
      - "${REDIS_PORT}:6379"
  backend:
    restart: always
    container_name: backend-${PROJECT_NAME}
    build:
      context: backend
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis
    env_file:
      - .env       
    ports:
      - "${BACKEND_PORT}:3000"
    volumes:
      - ./backend:/app
    entrypoint: ["npm", "run", "dev"]
  frontend:
    # restart: always
    container_name: frontend-${PROJECT_NAME}
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:3000"
    volumes:
      - ./frontend/src:/app/src
    entrypoint: ["yarn", "dev"]
    

  